package users
// Do Not Edit
// Generated by Blip

import (
	"blip/blipUtil"
	"blip/examples/template"
	"context"
	"fmt"
	"io"
	"strings"
	"time"
)

// Function block from line: 19

func toUpper(str string) string {
    return strings.ToUpper(str)
}


func ListUsersProcess( name string, c context.Context, w io.Writer ) (terror error) {
    start := time.Now()

	var si = blipUtil.Instance()
	var escaper = si.GetEscaperFor( "html") 
	defer func() {
		if err := recover(); err != nil {
			fmt.Printf("Catch panic %s: %s\n", "ListUsersProcess", err)
			terror = fmt.Errorf("%v", err)
		}
	    si.RenderComplete(escaper, "listUsers", "html", time.Since(start), terror)
	}()
	// Line: 3
	si.Write(w, []byte("\n"))
	// Line: 6
	si.Write(w, []byte("\n\n"))
	// Line: 8

	terror = template.HeadProcess("User Page", c, w)
	if terror != nil { return }
	// Line: 8
	si.Write(w, []byte("Hi "))
	// Line: 8
	si.WriteStrSafe(w, name , escaper)
	// Line: 9
	si.Write(w, []byte("\n"))
	// Line: 10
	var ctxL1 = context.WithValue(c, "__Blip__", 1)
		// Line: 11
		var contentF1S1 = func() (terror error) {
			// Line: 12
			si.Write(w, []byte("        The list of all users\n    "))
			// End of content block
			return
		}
		ctxL1 = context.WithValue(ctxL1, "body", contentF1S1)
	terror = template.TestProcess(ctxL1, w)
	if terror != nil { return }
	// Line: 15
	si.Write(w, []byte("\nThe end of the line\n"))
	// Line: 20
	si.Write(w, []byte("\n"))
	return
}